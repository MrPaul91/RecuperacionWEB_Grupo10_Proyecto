package llenadoOntologia;
package llenadoOntologia;


import virtuoso.jena.driver.*;

import org.apache.jena.query.*;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.io.OutputStream;

import org.apache.jena.datatypes.xsd.XSDDatatype;
import org.apache.jena.ontology.Individual;
import org.apache.jena.ontology.OntClass;
import org.apache.jena.ontology.OntModel;
import org.apache.jena.ontology.OntModelSpec;
import org.apache.jena.rdf.model.Model;
import org.apache.jena.rdf.model.ModelFactory;
import org.apache.jena.rdf.model.Property;
import org.apache.jena.rdf.model.Resource;
import org.apache.jena.sparql.core.DatasetImpl;
import org.apache.jena.util.FileManager;
import org.apache.jena.vocabulary.RDF;
public class Example {
	
	public static void main(String [] args) {
		ParameterizedSparqlString qs = new ParameterizedSparqlString(""
		        + "prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#>\n"
		        + "PREFIX dbo:     <http://dbpedia.org/ontology/>"
		        + "\n"
		        + "select distinct ?resource ?abstract where {\n"
		        + "  ?resource rdfs:label 'Ibuprofen'@en.\n"
		        + "  ?resource dbo:abstract ?abstract.\n"
		        + "  FILTER (lang(?abstract) = 'en')}");
	
	
		QueryExecution exec = QueryExecutionFactory.sparqlService("http://dbpedia.org/sparql", qs.asQuery());
	
		ResultSet results = exec.execSelect();
	
		while (results.hasNext()) {
	
		    System.out.println(results.next().get("abstract").toString());
		}
	
		ResultSetFormatter.out(results);
	}
}
